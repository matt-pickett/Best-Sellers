@page "/"
@model NewLeaderboard.Pages.Leaderboard.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1 class="mt-5">New York Times' Best Sellers</h1>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color" style="margin-top: 5rem">
        <p>
            Find by title or rank:
            <input type="text" name="SearchString" value="@Model.CurrentSearch" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort"
                asp-route-currentSearch="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.AuthorObj[0].Book.Title)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AuthorObj[0].Name)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.RankSort"
                asp-route-currentSearch="@Model.CurrentSearch">
                @Html.DisplayNameFor(model => model.AuthorObj[0].Book.Rank)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.AuthorObj) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Book.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Book.Rank)
            </td>
        </tr>
}
    </tbody>
</table>

<!---C#-->
@{
    var prevDisabled = !Model.AuthorObj.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.AuthorObj.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.AuthorObj.PageIndex - 1)"
   asp-route-currentSearch="@Model.CurrentSearch"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.AuthorObj.PageIndex + 1)"
   asp-route-currentSearch="@Model.CurrentSearch"
   class="btn btn-primary @nextDisabled">
    Next
</a>
